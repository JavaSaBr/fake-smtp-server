buildscript {
	ext { springBootVersion = '2.1.1.RELEASE' }
    repositories {
             mavenLocal()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2")
	}
}

plugins {
	id "com.cinnober.gradle.semver-git" version "2.3.1"
	id 'org.springframework.boot' version '2.1.1.RELEASE'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'

group = 'de.gessnerfl'
description = """Fake SMTP Server :: Simple SMTP Server which stores emails in memory and lists email in a web ui"""

ext.scmUrl = 'git@github.com:gessnerfl/fake-smtp-server.git'
ext.projectUrl = 'https://github.com/gessnerfl/fake-smtp-server'

sourceCompatibility = 11
targetCompatibility = 11

repositories { jcenter() }
jacoco {
	toolVersion = "0.8.2"
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('commons-io:commons-io:2.6')
	compile('org.subethamail:subethasmtp:3.1.7')
	compile('org.flywaydb:flyway-core')
	compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4:3.0.4.RELEASE')
	compile('com.sun.xml.bind:jaxb-impl:2.4.0-b180830.0438')
    compile('org.webjars.bower:jquery:3.3.1')
    compile('org.webjars:materializecss:1.0.0')
	compile('org.webjars:material-design-icons:3.0.1')

    runtime'com.h2database:h2'
	runtime('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	testCompile('org.apache.commons:commons-lang3:3.7')
	testCompile('org.ow2.asm:asm:7.0')
	testCompile('org.apache.commons:commons-lang3:3.8.1')
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

sonarqube {
	properties {
		property "sonar.projectName", "Fake SMTP Server"
		property "sonar.projectKey", "de.gessnerfl.fake-smtp-server"
	}
}

bootJar {
	archiveName = 'fake-smtp-server.jar'
}
